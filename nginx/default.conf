# ============================================================================
# Nginx Configuration for PHP API Stack
# Version: 1.0.0
# Supports: Standalone PHP, Symfony, Laravel
# Architecture: Security-first with performance optimization
# 
# Location Priority (Nginx matching order):
#   1. = (exact match)        - Highest priority
#   2. ^~ (prefix match)      - Stops regex search
#   3. ~ (regex)              - Case-sensitive
#   4. ~* (regex)             - Case-insensitive
#   5. / (prefix)             - Lowest priority
# ============================================================================

server {
    listen 80 default_server;
    listen [::]:80 default_server;
    
    server_name _;
    root /var/www/html/public;
    index index.php index.html;
    
    # ========================================================================
    # SECURITY HEADERS (OWASP Best Practices)
    # Reference: https://owasp.org/www-project-secure-headers/
    # ========================================================================
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;
    
    # ========================================================================
    # HEALTH CHECK ENDPOINTS (Exact Match - Highest Priority)
    # These MUST be before any regex patterns to ensure they work
    # ========================================================================
    
    # Simple health check (plain text, no PHP execution)
    # Used by: Load balancers, Kubernetes liveness probes
    location = /health {
        access_log off;
        add_header Content-Type text/plain;
        return 200 "healthy\n";
    }
    
    # Comprehensive health check (PHP-based, validates entire stack)
    # Used by: Monitoring systems, detailed diagnostics
    # Validates: PHP, OPcache, Redis, Extensions, System Resources
    location = /health.php {
        access_log off;
        fastcgi_pass unix:/var/run/php/php-fpm.sock;
        fastcgi_index index.php;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param DOCUMENT_ROOT $realpath_root;
        fastcgi_param SERVER_NAME $host;
        
        # Performance tuning for health checks
        fastcgi_buffer_size 128k;
        fastcgi_buffers 4 256k;
        fastcgi_busy_buffers_size 256k;
        fastcgi_connect_timeout 3s;
        fastcgi_send_timeout 5s;
        fastcgi_read_timeout 5s;
    }
    
    # Demo landing page (exact match for performance)
    # Shows stack information when no application is mounted
    location = /index.php {
        fastcgi_pass unix:/var/run/php/php-fpm.sock;
        fastcgi_index index.php;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param DOCUMENT_ROOT $realpath_root;
        fastcgi_param SERVER_NAME $host;
        
        # Performance tuning
        fastcgi_buffer_size 128k;
        fastcgi_buffers 4 256k;
        fastcgi_busy_buffers_size 256k;
    }
    
    # ========================================================================
    # MONITORING ENDPOINTS (Internal Access Only)
    # Reference: https://www.php.net/manual/en/fpm.status.php
    # ========================================================================
    
    # PHP-FPM status page (JSON/plain text)
    # Example: curl http://localhost/status?json
    location = /status {
        access_log off;
        allow 127.0.0.1;
        allow ::1;
        deny all;
        fastcgi_pass unix:/var/run/php/php-fpm.sock;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    }
    
    # PHP-FPM pool status and ping
    # /fpm-status - Detailed pool metrics
    # /fpm-ping   - Simple pong response
    location ~ ^/(fpm-status|fpm-ping)$ {
        access_log off;
        allow 127.0.0.1;
        allow ::1;
        deny all;
        fastcgi_pass unix:/var/run/php/php-fpm.sock;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    }
    
    # Redis status endpoint (optional, requires redis_status.php)
    location = /redis-status {
        access_log off;
        allow 127.0.0.1;
        allow ::1;
        deny all;
        try_files $uri /redis_status.php;
    }
    
    # ========================================================================
    # RATE LIMITING (DDoS Protection)
    # Requires: limit_req_zone in nginx.conf
    # ========================================================================
    
    location ^~ /api/ {
        limit_req zone=api burst=20 nodelay;
        limit_conn connlimit 50;
        try_files $uri /index.php$is_args$args;
    }
    
    # ========================================================================
    # STATIC FILES (Aggressive Caching)
    # Reference: https://www.nginx.com/blog/nginx-caching-guide/
    # ========================================================================
    
    location ~* \.(jpg|jpeg|gif|png|css|js|ico|xml|svg|woff|woff2|ttf|otf|eot|json|txt|pdf|doc|docx|xls|xlsx|ppt|pptx|zip|rar|tar|gz|bz2|7z)$ {
        access_log off;
        log_not_found off;
        expires 30d;
        add_header Cache-Control "public, immutable";
        add_header Vary Accept-Encoding;
        
        # CORS for fonts and images
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' 0;
            return 204;
        }
        add_header 'Access-Control-Allow-Origin' '*' always;
    }
    
    # ========================================================================
    # SECURITY BLOCKS (Deny Dangerous Patterns)
    # ========================================================================
    
    # Deny hidden files and directories
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Deny sensitive file extensions
    location ~* \.(engine|inc|install|make|module|profile|po|sh|.*sql|theme|twig|tpl|xtmpl|yml|yaml|env|git|svn)$ {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Deny backup and temporary files
    location ~* \.(bak|config|sample|~|swp|swo)$ {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Deny access to framework directories
    location ~ ^/(app|bin|config|database|resources|storage|tests|var|vendor)/ {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Disable PHP execution in uploads directory
    location ^~ /uploads/ {
        location ~ \.php$ {
            deny all;
        }
    }
    
    # ========================================================================
    # ROOT LOCATION (Front Controller Pattern)
    # Reference: https://symfony.com/doc/current/setup/web_server_configuration.html
    # ========================================================================
    
    location / {
        # Try to serve file directly → directory → front controller
        # This enables both static files and Symfony/Laravel routing
        try_files $uri $uri/ /index.php$is_args$args;
    }
    
    # ========================================================================
    # SYMFONY/LARAVEL FRONT CONTROLLER (Framework Integration)
    # This pattern matches: /index.php or /index.php/anything
    # ========================================================================
    
    location ~ ^/index\.php(/|$) {
        fastcgi_pass unix:/var/run/php/php-fpm.sock;
        fastcgi_split_path_info ^(.+\.php)(/.*)$;
        include fastcgi_params;
        
        # Symfony/Laravel specific parameters
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        fastcgi_param DOCUMENT_ROOT $realpath_root;
        fastcgi_param SERVER_NAME $host;
        fastcgi_param PATH_INFO $fastcgi_path_info;
        
        # Environment variables (can be overridden via process-configs.sh)
        fastcgi_param APP_ENV prod;
        fastcgi_param APP_SECRET changeme;
        fastcgi_param DATABASE_URL "";
        
        # Performance optimization
        fastcgi_buffer_size 128k;
        fastcgi_buffers 4 256k;
        fastcgi_busy_buffers_size 256k;
        fastcgi_temp_file_write_size 256k;
        fastcgi_intercept_errors on;
        fastcgi_keep_conn on;
        
        # FastCGI cache configuration (disabled by default)
        # Uncomment for API endpoints with cacheable responses
        # fastcgi_cache FASTCGI;
        # fastcgi_cache_valid 200 60m;
        # fastcgi_cache_bypass $no_cache;
        # fastcgi_no_cache $no_cache;
        
        # Security: Hide PHP version in headers
        fastcgi_hide_header X-Powered-By;
        
        # CRITICAL: Keep 'internal' for Symfony/Laravel routing
        # This ensures only try_files can invoke index.php
        # Without this, direct access to /index.php bypasses security
        internal;
    }
    
    # ========================================================================
    # GENERIC PHP HANDLER (Fallback - MUST be last regex)
    # Handles any .php files not caught by specific locations above
    # ========================================================================
    
    location ~ \.php$ {
        # Security: Block PHP execution in dangerous directories
        location ~ ^/(uploads|storage|cache|temp)/.+\.php$ {
            deny all;
        }
        
        # For pure Symfony/Laravel: return 404 to force routing via index.php
        # For standalone PHP apps: process normally (default behavior)
        # Uncomment the line below if using ONLY framework routing
        # return 404;
        
        # Generic PHP file execution (standalone PHP apps)
        fastcgi_pass unix:/var/run/php/php-fpm.sock;
        fastcgi_index index.php;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param DOCUMENT_ROOT $realpath_root;
        fastcgi_param SERVER_NAME $host;
        
        # Performance tuning
        fastcgi_buffer_size 128k;
        fastcgi_buffers 4 256k;
        fastcgi_busy_buffers_size 256k;
        fastcgi_intercept_errors on;
        fastcgi_keep_conn on;
        
        # Security
        fastcgi_hide_header X-Powered-By;
    }
    
    # ========================================================================
    # WEBSOCKET SUPPORT (Optional)
    # Uncomment if your application uses WebSockets
    # ========================================================================
    
    # location /ws {
    #     proxy_pass http://127.0.0.1:8080;
    #     proxy_http_version 1.1;
    #     proxy_set_header Upgrade $http_upgrade;
    #     proxy_set_header Connection "upgrade";
    #     proxy_set_header Host $host;
    #     proxy_set_header X-Real-IP $remote_addr;
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #     proxy_set_header X-Forwarded-Proto $scheme;
    #     proxy_read_timeout 86400;
    # }
}
